#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc(unknown)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, "triton_gpu.proton-slots" = 32 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @add_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32}, %arg3: i32 {tt.divisibility = 16 : i32}, %arg4: !tt.ptr<i32> {tt.divisibility = 16 : i32}) attributes {noinline = false} {
    tt.proton_record <0, "start", "cycle", "warpgroup">
    tt.proton_record <0, "end", "cycle", "warpgroup">
    tt.proton_record <1, "start", "cycle", "warpgroup">
    tt.proton_record <1, "end", "cycle", "warpgroup">
    tt.proton_record <2, "start", "cycle", "warpgroup">
    tt.proton_record <2, "end", "cycle", "warpgroup">
    tt.proton_record <3, "start", "cycle", "warpgroup">
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc)
    %0 = tt.get_program_id x : i32 loc(#loc)
    %1 = arith.muli %0, %c4096_i32 : i32 loc(#loc)
    %2 = tt.make_range {end = 4096 : i32, start = 0 : i32} : tensor<4096xi32, #blocked> loc(#loc)
    %3 = tt.splat %1 : i32 -> tensor<4096xi32, #blocked> loc(#loc)
    %4 = arith.addi %3, %2 : tensor<4096xi32, #blocked> loc(#loc)
    %5 = tt.splat %arg3 : i32 -> tensor<4096xi32, #blocked> loc(#loc)
    %6 = arith.cmpi slt, %4, %5 : tensor<4096xi32, #blocked> loc(#loc)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4096x!tt.ptr<f32>, #blocked> loc(#loc)
    %8 = tt.addptr %7, %4 : tensor<4096x!tt.ptr<f32>, #blocked>, tensor<4096xi32, #blocked> loc(#loc)
    %9 = tt.load %8, %6 : tensor<4096x!tt.ptr<f32>, #blocked> loc(#loc)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4096x!tt.ptr<f32>, #blocked> loc(#loc)
    %11 = tt.addptr %10, %4 : tensor<4096x!tt.ptr<f32>, #blocked>, tensor<4096xi32, #blocked> loc(#loc)
    %12 = tt.load %11, %6 : tensor<4096x!tt.ptr<f32>, #blocked> loc(#loc)
    tt.proton_record <3, "end", "cycle", "warpgroup">
    tt.proton_record <4, "start", "cycle", "warpgroup">
    %13 = arith.addf %9, %12 : tensor<4096xf32, #blocked> loc(#loc)
    tt.proton_record <4, "end", "cycle", "warpgroup">
    tt.proton_record <5, "start", "cycle", "warpgroup">
    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4096x!tt.ptr<f32>, #blocked> loc(#loc)
    %15 = tt.addptr %14, %4 : tensor<4096x!tt.ptr<f32>, #blocked>, tensor<4096xi32, #blocked> loc(#loc)
    tt.store %15, %13, %6 : tensor<4096x!tt.ptr<f32>, #blocked> loc(#loc)
    tt.proton_record <5, "end", "cycle", "warpgroup">
    tt.return loc(#loc)
  } loc(#loc)
} loc(#loc)
