#blocked = #triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [8, 1], threadsPerWarp = [16, 2], warpsPerCTA = [1, 4], order = [0, 1]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0)
#loc1 = loc(unknown)
#loc25 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":187:74)
#loc32 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":64:46)
#loc39 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":67:25)
#mma = #triton_gpu.nvidia_mma<{versionMajor = 3, versionMinor = 0, warpsPerCTA = [4, 1], instrShape = [16, 128, 16]}>
#shared = #triton_gpu.shared<{vec = 8, perPhase = 1, maxPhase = 8, order = [1, 0], hasLeadingOffset = true}>
#shared1 = #triton_gpu.shared<{vec = 8, perPhase = 1, maxPhase = 8, order = [0, 1], hasLeadingOffset = true}>
#loc69 = loc(callsite(#loc1 at #loc32))
#loc76 = loc(callsite(#loc1 at #loc39))
#loc89 = loc(callsite(#loc69 at #loc25))
#loc92 = loc(callsite(#loc76 at #loc25))
module attributes {"proton.slots" = 256 : i32, "triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @_attn_fwd(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg3: f32 loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg15: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg16: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg17: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg18: i32 loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg19: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg20: i32 {tt.divisibility = 16 : i32} loc("/home/fywkevin/local/exp/profiler/attn_profile.py":116:0), %arg121: !tt.ptr<i32> {tt.divisibility = 16 : i32}) attributes {noinline = false} {
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant dense<128> : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c-1_i32 = arith.constant -1 : i32 loc(#loc1)
    %false = arith.constant false loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant 1.44269502 : f32 loc(#loc1)
    %c128_i64 = arith.constant 128 : i64 loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %cst_3 = arith.constant dense<0xFF800000> : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<128x128xf32, #mma> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.divsi %1, %arg19 : i32 loc(#loc4)
    %3 = arith.remsi %1, %arg19 : i32 loc(#loc5)
    %4 = arith.extsi %2 : i32 to i64 loc(#loc6)
    %5 = arith.extsi %arg6 : i32 to i64 loc(#loc7)
    %6 = arith.muli %4, %5 : i64 loc(#loc7)
    %7 = arith.extsi %3 : i32 to i64 loc(#loc8)
    %8 = arith.extsi %arg7 : i32 to i64 loc(#loc9)
    %9 = arith.muli %7, %8 : i64 loc(#loc9)
    %10 = arith.addi %6, %9 : i64 loc(#loc10)
    %11 = tt.addptr %arg0, %10 : !tt.ptr<bf16>, i64 loc(#loc11)
    %12 = arith.muli %0, %c128_i32 : i32 loc(#loc12)
    %13 = arith.extsi %arg8 : i32 to i64 loc(#loc13)
    %14 = arith.extsi %12 : i32 to i64 loc(#loc13)
    %15 = tt.addptr %arg2, %10 : !tt.ptr<bf16>, i64 loc(#loc14)
    %16 = arith.extsi %arg14 : i32 to i64 loc(#loc15)
    %17 = tt.addptr %arg1, %10 : !tt.ptr<bf16>, i64 loc(#loc16)
    %18 = arith.extsi %arg11 : i32 to i64 loc(#loc17)
    %19 = tt.addptr %arg5, %10 : !tt.ptr<bf16>, i64 loc(#loc18)
    %20 = arith.extsi %arg17 : i32 to i64 loc(#loc19)
    %21 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc20)
    %22 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc20)
    %23 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc20)
    %24 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc20)
    %25 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked2> loc(#loc20)
    %26 = tt.splat %12 : i32 -> tensor<128xi32, #blocked2> loc(#loc21)
    %27 = arith.addi %26, %25 : tensor<128xi32, #blocked2> loc(#loc21)
    %28 = arith.mulf %arg3, %cst_1 : f32 loc(#loc22)
    %29 = tt.splat %11 : !tt.ptr<bf16> -> tensor<128x128x!tt.ptr<bf16>, #blocked> loc(#loc23)
    %30 = tt.splat %14 : i64 -> tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc23)
    %31 = arith.extsi %21 : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> to tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc23)
    %32 = arith.extsi %22 : tensor<128xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> to tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc23)
    %33 = arith.extsi %23 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> to tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc23)
    %34 = arith.extsi %24 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> to tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc23)
    %35 = arith.addi %30, %31 : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc23)
    %36 = tt.expand_dims %35 {axis = 1 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi64, #blocked> loc(#loc23)
    %37 = tt.splat %13 : i64 -> tensor<128x1xi64, #blocked> loc(#loc23)
    %38 = arith.muli %36, %37 : tensor<128x1xi64, #blocked> loc(#loc23)
    %39 = tt.broadcast %38 : tensor<128x1xi64, #blocked> -> tensor<128x128xi64, #blocked> loc(#loc23)
    %40 = tt.expand_dims %33 {axis = 0 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi64, #blocked> loc(#loc23)
    %41 = tt.broadcast %40 : tensor<1x128xi64, #blocked> -> tensor<128x128xi64, #blocked> loc(#loc23)
    %42 = arith.addi %39, %41 : tensor<128x128xi64, #blocked> loc(#loc23)
    %43 = tt.addptr %29, %42 : tensor<128x128x!tt.ptr<bf16>, #blocked>, tensor<128x128xi64, #blocked> loc(#loc23)
    %44 = tt.load %43 : tensor<128x128x!tt.ptr<bf16>, #blocked> loc(#loc23)
    %45 = triton_gpu.local_alloc %44 : (tensor<128x128xbf16, #blocked>) -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> loc(#loc23)
    %46 = tt.splat %17 : !tt.ptr<bf16> -> tensor<128x128x!tt.ptr<bf16>, #blocked1> loc(#loc62)
    %47 = tt.expand_dims %32 {axis = 1 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<128x1xi64, #blocked1> loc(#loc62)
    %48 = tt.broadcast %47 : tensor<128x1xi64, #blocked1> -> tensor<128x128xi64, #blocked1> loc(#loc62)
    %49 = tt.splat %18 : i64 -> tensor<1x128xi64, #blocked1> loc(#loc62)
    %50 = tt.splat %28 : f32 -> tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc63)
    %51 = tt.splat %28 : f32 -> tensor<128x128xf32, #mma> loc(#loc64)
    %52 = tt.splat %15 : !tt.ptr<bf16> -> tensor<128x128x!tt.ptr<bf16>, #blocked> loc(#loc65)
    %53 = tt.splat %16 : i64 -> tensor<128x1xi64, #blocked> loc(#loc65)
    %54 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
    %55 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
    %56 = arith.cmpi sgt, %arg20, %c0_i32 : i32 loc(#loc66)
    %57 = tt.expand_dims %34 {axis = 0 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x128xi64, #blocked1> loc(#loc62)
    %58 = arith.muli %57, %49 : tensor<1x128xi64, #blocked1> loc(#loc62)
    %59 = tt.broadcast %58 : tensor<1x128xi64, #blocked1> -> tensor<128x128xi64, #blocked1> loc(#loc62)
    %60 = arith.addi %48, %59 : tensor<128x128xi64, #blocked1> loc(#loc62)
    %61 = tt.addptr %46, %60 : tensor<128x128x!tt.ptr<bf16>, #blocked1>, tensor<128x128xi64, #blocked1> loc(#loc62)
    %62 = triton_gpu.memdesc_subview %54[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
    %63 = tt.splat %56 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc66)
    %64 = triton_gpu.async_copy_global_to_local %61, %62 mask %63 : tensor<128x128x!tt.ptr<bf16>, #blocked1> -> <128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
    %65 = triton_gpu.async_commit_group %64 loc(#loc62)
    %66 = tt.expand_dims %31 {axis = 1 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi64, #blocked> loc(#loc65)
    %67 = arith.muli %66, %53 : tensor<128x1xi64, #blocked> loc(#loc65)
    %68 = tt.broadcast %67 : tensor<128x1xi64, #blocked> -> tensor<128x128xi64, #blocked> loc(#loc65)
    %69 = arith.addi %68, %41 : tensor<128x128xi64, #blocked> loc(#loc65)
    %70 = tt.addptr %52, %69 : tensor<128x128x!tt.ptr<bf16>, #blocked>, tensor<128x128xi64, #blocked> loc(#loc65)
    %71 = triton_gpu.memdesc_subview %55[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
    %72 = tt.splat %56 : i1 -> tensor<128x128xi1, #blocked> loc(#loc66)
    %73 = triton_gpu.async_copy_global_to_local %70, %71 mask %72 : tensor<128x128x!tt.ptr<bf16>, #blocked> -> <128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
    %74 = triton_gpu.async_commit_group %73 loc(#loc65)
    %75 = arith.cmpi sgt, %arg20, %c128_i32 : i32 loc(#loc66)
    %76 = arith.addi %34, %cst_0 : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc62)
    %77 = tt.expand_dims %76 {axis = 0 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x128xi64, #blocked1> loc(#loc62)
    %78 = arith.muli %77, %49 : tensor<1x128xi64, #blocked1> loc(#loc62)
    %79 = tt.broadcast %78 : tensor<1x128xi64, #blocked1> -> tensor<128x128xi64, #blocked1> loc(#loc62)
    %80 = arith.addi %48, %79 : tensor<128x128xi64, #blocked1> loc(#loc62)
    %81 = tt.addptr %46, %80 : tensor<128x128x!tt.ptr<bf16>, #blocked1>, tensor<128x128xi64, #blocked1> loc(#loc62)
    %82 = triton_gpu.memdesc_subview %54[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
    %83 = tt.splat %75 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc66)
    %84 = triton_gpu.async_copy_global_to_local %81, %82 mask %83 : tensor<128x128x!tt.ptr<bf16>, #blocked1> -> <128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
    %85 = triton_gpu.async_commit_group %84 loc(#loc62)
    %86 = arith.addi %31, %cst : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc65)
    %87 = tt.expand_dims %86 {axis = 1 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi64, #blocked> loc(#loc65)
    %88 = arith.muli %87, %53 : tensor<128x1xi64, #blocked> loc(#loc65)
    %89 = tt.broadcast %88 : tensor<128x1xi64, #blocked> -> tensor<128x128xi64, #blocked> loc(#loc65)
    %90 = arith.addi %89, %41 : tensor<128x128xi64, #blocked> loc(#loc65)
    %91 = tt.addptr %52, %90 : tensor<128x128x!tt.ptr<bf16>, #blocked>, tensor<128x128xi64, #blocked> loc(#loc65)
    %92 = triton_gpu.memdesc_subview %55[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
    %93 = tt.splat %75 : i1 -> tensor<128x128xi1, #blocked> loc(#loc66)
    %94 = triton_gpu.async_copy_global_to_local %91, %92 mask %93 : tensor<128x128x!tt.ptr<bf16>, #blocked> -> <128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
    %95 = triton_gpu.async_commit_group %94 loc(#loc65)
    triton_nvidia_gpu.fence_async_shared {bCluster = false} loc(#loc67)
    %96:11 = scf.for %arg21 = %c0_i32 to %arg20 step %c128_i32 iter_args(%arg22 = %cst_2, %arg23 = %cst_4, %arg24 = %cst_3, %arg25 = %c128_i64, %arg26 = %c128_i64, %arg27 = %c1_i32, %arg28 = %c-1_i32, %arg29 = %65, %arg30 = %85, %arg31 = %74, %arg32 = %95) -> (tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<128x128xf32, #mma>, tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, i64, i64, i32, i32, !triton_gpu.async.token, !triton_gpu.async.token, !triton_gpu.async.token, !triton_gpu.async.token)  : i32 {
      tt.proton_record <0, "start", "cycle", "warpgroup">
      %117 = arith.subi %arg20, %c256_i32 : i32 loc(#loc66)
      %118 = arith.cmpi slt, %arg21, %117 : i32 loc(#loc66)
      %119 = arith.addi %arg28, %c1_i32 : i32 loc(#loc66)
      %120 = arith.cmpi slt, %119, %c3_i32 : i32 loc(#loc66)
      %121 = arith.select %120, %119, %c0_i32 : i32 loc(#loc66)
      tt.proton_record <0, "end", "cycle", "warpgroup">
      %122 = triton_gpu.async_wait %arg29 {num = 3 : i32} loc(#loc62)
      tt.proton_record <1, "start", "cycle", "warpgroup">
      %123 = triton_gpu.memdesc_subview %54[%121, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
      %124 = triton_nvidia_gpu.warp_group_dot %45, %123, %cst_4, %false {inputPrecision = 0 : i32, isAsync = true} : !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory> * !tt.memdesc<128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> -> tensor<128x128xf32, #mma> loc(#loc67)
      tt.proton_record <1, "end", "cycle", "warpgroup">
      %125:4 = triton_nvidia_gpu.warp_group_dot_wait %124, %45, %123, %arg23 {pendings = 0 : i32} : tensor<128x128xf32, #mma>, !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory>, !tt.memdesc<128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable>, tensor<128x128xf32, #mma> loc(#loc67)
      tt.proton_record <2, "start", "cycle", "warpgroup">
      %126 = "tt.reduce"(%125#0) <{axis = 1 : i32}> ({
      ^bb0(%arg33: f32 loc(callsite(#loc69 at #loc25)), %arg34: f32 loc(callsite(#loc69 at #loc25))):
        %174 = arith.maxnumf %arg33, %arg34 : f32 loc(#loc94)
        tt.reduce.return %174 : f32 loc(#loc88)
      }) : (tensor<128x128xf32, #mma>) -> tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc88)
      %127 = arith.mulf %126, %50 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc63)
      %128 = arith.maxnumf %arg24, %127 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc71)
      %129 = arith.mulf %125#0, %51 : tensor<128x128xf32, #mma> loc(#loc64)
      %130 = tt.expand_dims %128 {axis = 1 : i32} : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<128x1xf32, #mma> loc(#loc72)
      %131 = tt.broadcast %130 : tensor<128x1xf32, #mma> -> tensor<128x128xf32, #mma> loc(#loc73)
      %132 = arith.subf %129, %131 : tensor<128x128xf32, #mma> loc(#loc73)
      %133 = math.exp2 %132 : tensor<128x128xf32, #mma> loc(#loc74)
      %134 = "tt.reduce"(%133) <{axis = 1 : i32}> ({
      ^bb0(%arg33: f32 loc(callsite(#loc76 at #loc25)), %arg34: f32 loc(callsite(#loc76 at #loc25))):
        %174 = arith.addf %arg33, %arg34 : f32 loc(#loc95)
        tt.reduce.return %174 : f32 loc(#loc91)
      }) : (tensor<128x128xf32, #mma>) -> tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc91)
      %135 = arith.subf %arg24, %128 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc78)
      %136 = math.exp2 %135 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc79)
      %137 = arith.mulf %arg22, %136 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc80)
      %138 = arith.addf %137, %134 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc81)
      %139 = tt.expand_dims %136 {axis = 1 : i32} : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<128x1xf32, #mma> loc(#loc82)
      %140 = tt.broadcast %139 : tensor<128x1xf32, #mma> -> tensor<128x128xf32, #mma> loc(#loc83)
      %141 = arith.mulf %125#3, %140 : tensor<128x128xf32, #mma> loc(#loc83)
      tt.proton_record <2, "end", "cycle", "warpgroup">
      %142 = triton_gpu.async_wait %arg31 {num = 2 : i32} loc(#loc65)
      tt.proton_record <3, "start", "cycle", "warpgroup">
      %143 = triton_gpu.memdesc_subview %55[%121, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
      %144 = arith.truncf %133 : tensor<128x128xf32, #mma> to tensor<128x128xbf16, #mma> loc(#loc84)
      %145 = triton_gpu.convert_layout %144 : tensor<128x128xbf16, #mma> -> tensor<128x128xbf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma}>> loc(#loc85)
      triton_nvidia_gpu.fence_async_shared {bCluster = false} loc(#loc85)
      %146 = triton_nvidia_gpu.warp_group_dot %145, %143, %141 {inputPrecision = 0 : i32, isAsync = true} : tensor<128x128xbf16, #triton_gpu.dot_op<{opIdx = 0, parent = #mma}>> * !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> tensor<128x128xf32, #mma> loc(#loc85)
      %147 = arith.addi %arg25, %c128_i64 : i64 loc(#loc86)
      %148 = arith.addi %arg26, %c128_i64 : i64 loc(#loc87)
      %149 = arith.addi %arg27, %c1_i32 : i32 loc(#loc66)
      %150 = arith.cmpi slt, %149, %c3_i32 : i32 loc(#loc66)
      %151 = arith.select %150, %149, %c0_i32 : i32 loc(#loc66)
      %152 = tt.splat %148 : i64 -> tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc62)
      %153 = arith.addi %152, %34 : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc62)
      %154 = tt.expand_dims %153 {axis = 0 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x128xi64, #blocked1> loc(#loc62)
      %155 = arith.muli %154, %49 : tensor<1x128xi64, #blocked1> loc(#loc62)
      %156 = tt.broadcast %155 : tensor<1x128xi64, #blocked1> -> tensor<128x128xi64, #blocked1> loc(#loc62)
      %157 = arith.addi %48, %156 : tensor<128x128xi64, #blocked1> loc(#loc62)
      %158 = tt.addptr %46, %157 : tensor<128x128x!tt.ptr<bf16>, #blocked1>, tensor<128x128xi64, #blocked1> loc(#loc62)
      %159 = triton_gpu.memdesc_subview %54[%151, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
      %160 = tt.splat %118 : i1 -> tensor<128x128xi1, #blocked1> loc(#loc66)
      %161 = triton_gpu.async_copy_global_to_local %158, %159 mask %160 : tensor<128x128x!tt.ptr<bf16>, #blocked1> -> <128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc62)
      tt.proton_record <3, "end", "cycle", "warpgroup">
      %162 = triton_gpu.async_commit_group %161 loc(#loc62)
      tt.proton_record <4, "start", "cycle", "warpgroup">
      %163 = tt.splat %147 : i64 -> tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc65)
      %164 = arith.addi %163, %31 : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc65)
      %165 = tt.expand_dims %164 {axis = 1 : i32} : tensor<128xi64, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi64, #blocked> loc(#loc65)
      %166 = arith.muli %165, %53 : tensor<128x1xi64, #blocked> loc(#loc65)
      %167 = tt.broadcast %166 : tensor<128x1xi64, #blocked> -> tensor<128x128xi64, #blocked> loc(#loc65)
      %168 = arith.addi %167, %41 : tensor<128x128xi64, #blocked> loc(#loc65)
      %169 = tt.addptr %52, %168 : tensor<128x128x!tt.ptr<bf16>, #blocked>, tensor<128x128xi64, #blocked> loc(#loc65)
      %170 = triton_gpu.memdesc_subview %55[%151, %c0_i32, %c0_i32] : !tt.memdesc<3x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> -> !tt.memdesc<128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
      %171 = tt.splat %118 : i1 -> tensor<128x128xi1, #blocked> loc(#loc66)
      %172 = triton_gpu.async_copy_global_to_local %169, %170 mask %171 : tensor<128x128x!tt.ptr<bf16>, #blocked> -> <128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc65)
      tt.proton_record <4, "end", "cycle", "warpgroup">
      tt.proton_record <5, "start", "cycle", "warpgroup">
      %173 = triton_gpu.async_commit_group %172 loc(#loc65)
      tt.proton_record <5, "end", "cycle", "warpgroup">
      scf.yield %138, %146, %128, %147, %148, %151, %121, %arg30, %162, %arg32, %173 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, tensor<128x128xf32, #mma>, tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>>, i64, i64, i32, i32, !triton_gpu.async.token, !triton_gpu.async.token, !triton_gpu.async.token, !triton_gpu.async.token loc(#loc66)
    } loc(#loc66)
    %97 = triton_nvidia_gpu.warp_group_dot_wait %96#1 {pendings = 0 : i32} : tensor<128x128xf32, #mma> loc(#loc66)
    %98 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc66)
    triton_gpu.local_dealloc %54 : !tt.memdesc<3x128x128xbf16, #shared1, #triton_gpu.shared_memory, mutable> loc(#loc66)
    triton_gpu.local_dealloc %55 : !tt.memdesc<3x128x128xbf16, #shared, #triton_gpu.shared_memory, mutable> loc(#loc66)
    %99 = math.log2 %96#0 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc51)
    %100 = arith.addf %96#2, %99 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> loc(#loc52)
    %101 = tt.expand_dims %96#0 {axis = 1 : i32} : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<128x1xf32, #mma> loc(#loc53)
    %102 = tt.broadcast %101 : tensor<128x1xf32, #mma> -> tensor<128x128xf32, #mma> loc(#loc54)
    %103 = arith.divf %97, %102 : tensor<128x128xf32, #mma> loc(#loc54)
    %104 = arith.muli %1, %arg20 : i32 loc(#loc55)
    %105 = tt.addptr %arg4, %104 : !tt.ptr<f32>, i32 loc(#loc56)
    %106 = tt.splat %105 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked2> loc(#loc57)
    %107 = tt.addptr %106, %27 : tensor<128x!tt.ptr<f32>, #blocked2>, tensor<128xi32, #blocked2> loc(#loc57)
    %108 = triton_gpu.convert_layout %100 : tensor<128xf32, #triton_gpu.slice<{dim = 1, parent = #mma}>> -> tensor<128xf32, #blocked2> loc(#loc58)
    tt.store %107, %108 : tensor<128x!tt.ptr<f32>, #blocked2> loc(#loc58)
    %109 = arith.truncf %103 : tensor<128x128xf32, #mma> to tensor<128x128xbf16, #mma> loc(#loc59)
    %110 = tt.splat %19 : !tt.ptr<bf16> -> tensor<128x128x!tt.ptr<bf16>, #blocked> loc(#loc60)
    %111 = tt.splat %20 : i64 -> tensor<128x1xi64, #blocked> loc(#loc60)
    %112 = arith.muli %36, %111 : tensor<128x1xi64, #blocked> loc(#loc60)
    %113 = tt.broadcast %112 : tensor<128x1xi64, #blocked> -> tensor<128x128xi64, #blocked> loc(#loc60)
    %114 = arith.addi %113, %41 : tensor<128x128xi64, #blocked> loc(#loc60)
    %115 = tt.addptr %110, %114 : tensor<128x128x!tt.ptr<bf16>, #blocked>, tensor<128x128xi64, #blocked> loc(#loc60)
    %116 = triton_gpu.convert_layout %109 : tensor<128x128xbf16, #mma> -> tensor<128x128xbf16, #blocked> loc(#loc60)
    tt.store %115, %116 : tensor<128x128x!tt.ptr<bf16>, #blocked> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":128:28)
#loc3 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":129:27)
#loc4 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":130:22)
#loc5 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":131:21)
#loc6 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":132:26)
#loc7 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":132:38)
#loc8 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":132:59)
#loc9 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":132:71)
#loc10 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":132:50)
#loc11 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":136:17)
#loc12 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":139:27)
#loc13 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":141:8)
#loc14 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":145:17)
#loc15 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":150:8)
#loc16 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":153:17)
#loc17 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":158:8)
#loc18 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":161:19)
#loc19 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":166:8)
#loc20 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":169:46)
#loc21 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":169:33)
#loc22 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":177:16)
#loc23 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":179:16)
#loc24 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":56:20)
#loc26 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":64:51)
#loc27 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":65:22)
#loc28 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":74:20)
#loc29 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":53:33)
#loc30 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":57:23)
#loc31 = loc("/home/fywkevin/local/triton/python/triton/language/standard.py":184:40)
#loc33 = loc("/home/fywkevin/local/triton/python/triton/language/standard.py":163:27)
#loc34 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":64:35)
#loc35 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":65:38)
#loc36 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":65:33)
#loc37 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":66:25)
#loc38 = loc("/home/fywkevin/local/triton/python/triton/language/standard.py":267:36)
#loc40 = loc("/home/fywkevin/local/triton/python/triton/language/standard.py":256:15)
#loc41 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":69:35)
#loc42 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":69:29)
#loc43 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":70:20)
#loc44 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":70:28)
#loc45 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":72:26)
#loc46 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":72:20)
#loc47 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":78:21)
#loc48 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":79:27)
#loc49 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":82:46)
#loc50 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":83:46)
#loc51 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":199:24)
#loc52 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":199:11)
#loc53 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":200:20)
#loc54 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":200:16)
#loc55 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":201:26)
#loc56 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":201:17)
#loc57 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":201:34)
#loc58 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":202:21)
#loc59 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":203:33)
#loc60 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":203:26)
#loc61 = loc("/home/fywkevin/local/exp/profiler/attn_profile.py":203:4)
#loc62 = loc(callsite(#loc24 at #loc25))
#loc63 = loc(callsite(#loc26 at #loc25))
#loc64 = loc(callsite(#loc27 at #loc25))
#loc65 = loc(callsite(#loc28 at #loc25))
#loc66 = loc(callsite(#loc29 at #loc25))
#loc67 = loc(callsite(#loc30 at #loc25))
#loc68 = loc(callsite(#loc31 at #loc32))
#loc70 = loc(callsite(#loc33 at #loc31))
#loc71 = loc(callsite(#loc34 at #loc25))
#loc72 = loc(callsite(#loc35 at #loc25))
#loc73 = loc(callsite(#loc36 at #loc25))
#loc74 = loc(callsite(#loc37 at #loc25))
#loc75 = loc(callsite(#loc38 at #loc39))
#loc77 = loc(callsite(#loc40 at #loc38))
#loc78 = loc(callsite(#loc41 at #loc25))
#loc79 = loc(callsite(#loc42 at #loc25))
#loc80 = loc(callsite(#loc43 at #loc25))
#loc81 = loc(callsite(#loc44 at #loc25))
#loc82 = loc(callsite(#loc45 at #loc25))
#loc83 = loc(callsite(#loc46 at #loc25))
#loc84 = loc(callsite(#loc47 at #loc25))
#loc85 = loc(callsite(#loc48 at #loc25))
#loc86 = loc(callsite(#loc49 at #loc25))
#loc87 = loc(callsite(#loc50 at #loc25))
#loc88 = loc(callsite(#loc68 at #loc25))
#loc90 = loc(callsite(#loc70 at #loc32))
#loc91 = loc(callsite(#loc75 at #loc25))
#loc93 = loc(callsite(#loc77 at #loc39))
#loc94 = loc(callsite(#loc90 at #loc25))
#loc95 = loc(callsite(#loc93 at #loc25))
